server.port=8000
spring.application.name=product-service

#Database connection
spring.datasource.url=jdbc:postgresql://localhost/db_product
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Spring Boot Actuator - Show all endpoints & Show All details in Health
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.info.env.enabled=true

# Personalized informations -> Show in actuator/info
info.app.name=product-service
info.app.description=This is a sample Eureka client application
info.app.version=1.0.0
info.company.name=MyCompany
info.company.department=Engineering

#FlywayDB - Path to scripts (default db/migation)
spring.flyway.locations=classpath:db_migration

#Spring Cloud Eureka - Server URL
eureka.client.service-url.defaultZone: http://localhost:8761/eureka
# Quando o API Gateway nao consegue resolver o nome (pc.dominio.local) entao tem que configurar localhost ou entao o IP Address
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
#Para usar o actuator ao inves de heartbeat
eureka.client.healthcheck.enabled=true 

#Configuracao necessaria para poder redirecionar os as urls, necessario para trabalhar com Spring Api Gateway
springdoc.api-docs.path=/product-service/v3/api-docs
springdoc.swagger-ui.path=/product-service/swagger-ui.html
#Configuracoes que sao utilizadas na Classe OpenApiConfig
!openapi.service.title=boo-service doc
!openapi.service.version=1.0.0
openapi.service.url=http://localhost:8765