spring.application.name=api-gateway
server.port=8765

# Spring Boot Actuator - Show all endpoints & Show All details in Health
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.info.env.enabled=true

# Personalized informations -> Show in actuator/info
info.app.name=product-service
info.app.description=This is a sample Eureka client application
info.app.version=1.0.0
info.company.name=MyCompany
info.company.department=Engineering

#Spring Cloud Eureka - Server URL
eureka.client.service-url.defaultZone: http://localhost:8761/eureka
# Quando o API Gateway nao consegue resolver o nome (pc.dominio.local) entao tem que configurar localhost ou entao o IP Address
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
#Para usar o actuator ao inves de heartbeat
eureka.client.healthcheck.enabled=true 

# Spring Cloud Gateway with Discovery - E possivel ele mapear automaticamente todos os web-services que estao no Eureka
# Foi desabilitado pois estamos utilizando a Classe ApiGatewayConfig
!spring.cloud.gateway.discovery.locator.enabled=true
!spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#Aqui podemos definir as rotas, mas estamos usando a Classe ApiGatewayConfig
!spring.cloud.gateway.routes[0].id=book-service
!spring.cloud.gateway.routes[0].uri=lb://book-service
!spring.cloud.gateway.routes[0].predicates[0]=Path=/book-service/**

#SpringDoc - Configuracao para o Swagger vir completo com todos os microservices
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.urls[0].url=/v3/api-docs
springdoc.swagger-ui.urls[0].name=API Gateway Service Doc

springdoc.swagger-ui.urls[1].url=/product-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Product Service Doc

springdoc.swagger-ui.urls[2].url=/currency-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Currency Service Doc

springdoc.swagger-ui.urls[3].url=/auth-service/v3/api-docs
springdoc.swagger-ui.urls[3].name=Auth Service Doc
